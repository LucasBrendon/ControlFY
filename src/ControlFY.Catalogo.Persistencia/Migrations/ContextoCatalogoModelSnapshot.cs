// <auto-generated />
using System;
using ControlFY.Catalogo.Persistencia.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace ControlFY.Catalogo.Persistencia.Migrations
{
    [DbContext(typeof(ContextoCatalogo))]
    partial class ContextoCatalogoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ControlFY.Catalogo.Dominio.Entidades.Categoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_CATEGORIA")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NOME");

                    b.HasKey("Id");

                    b.ToTable("CATEGORIA");
                });

            modelBuilder.Entity("ControlFY.Catalogo.Dominio.Entidades.Endereco", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_ENDERECO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("BAIRRO");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("varchar(11)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("ESTADO");

                    b.Property<long>("FornecedorId")
                        .HasColumnType("bigint")
                        .HasColumnName("FK_ENDERECO_FORNECEDOR");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("LOGRADOURO");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("NUMERO");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("varchar(250)")
                        .HasColumnName("PAIS");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId")
                        .IsUnique();

                    b.ToTable("ENDERECO");
                });

            modelBuilder.Entity("ControlFY.Catalogo.Dominio.Entidades.Fornecedor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_FORNECEDOR")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(14)")
                        .HasColumnName("DOCUMENTO");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(150)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasColumnName("NOME");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(30)")
                        .HasColumnName("TELEFONE");

                    b.Property<int>("TipoDocumento")
                        .HasColumnType("integer")
                        .HasColumnName("TIPO_DOCUMENTO");

                    b.HasKey("Id");

                    b.ToTable("FORNECEDOR");
                });

            modelBuilder.Entity("ControlFY.Catalogo.Dominio.Entidades.Produto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("ID_PRODUTO")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("CategoriaId")
                        .HasColumnType("bigint")
                        .HasColumnName("FK_PRODUTO_CATEGORIA");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("timestamp")
                        .HasColumnName("DATA_ATUALIZACAO");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp")
                        .HasColumnName("DATA_CADASTRO");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)")
                        .HasColumnName("DESCRICAO");

                    b.Property<long>("FornecedorId")
                        .HasColumnType("bigint")
                        .HasColumnName("FK_PRODUTO_FORNECEDOR");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)")
                        .HasColumnName("NOME");

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric(11,2)")
                        .HasColumnName("VALOR");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("FornecedorId");

                    b.ToTable("PRODUTO");
                });

            modelBuilder.Entity("ControlFY.Catalogo.Dominio.Entidades.Endereco", b =>
                {
                    b.HasOne("ControlFY.Catalogo.Dominio.Entidades.Fornecedor", "Fornecedor")
                        .WithOne("Endereco")
                        .HasForeignKey("ControlFY.Catalogo.Dominio.Entidades.Endereco", "FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("ControlFY.Catalogo.Dominio.Entidades.Produto", b =>
                {
                    b.HasOne("ControlFY.Catalogo.Dominio.Entidades.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ControlFY.Catalogo.Dominio.Entidades.Fornecedor", "Fornecedor")
                        .WithMany("Produtos")
                        .HasForeignKey("FornecedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("ControlFY.Catalogo.Dominio.Entidades.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("ControlFY.Catalogo.Dominio.Entidades.Fornecedor", b =>
                {
                    b.Navigation("Endereco");

                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
